const long long nmax = 1e5 + 5;
const long long logmax = 17;

long long ranges[nmax];
long long sparseTable[logmax][nmax];

inline long long query(long long ql, long long qr) {
    return std::min(sparseTable[ranges[qr - ql]][ql], 
        sparseTable[ranges[qr - ql]][qr - (1 << ranges[qr - ql])]); 
}

signed main() {
    std::cin.tie(0)->sync_with_stdio(0);
    for (long long i = 1, pow = 0; i < nmax; ++i) ranges[i] = ((1 << (pow + 1)) == i ? ++pow : pow);
    long long n;
    std::cin >> n;
    std::vector<long long> arr(n);
    for (auto & u : arr) std::cin >> u;
    for (int i = 0; i < n; ++i) sparseTable[0][i] = arr[i];
    for (long long k = 0; k < logmax - 1; ++k) {
        for (long long i = 0; i + (2 << k) <= n; ++i)
            sparseTable[k + 1][i] = std::min(sparseTable[k][i], sparseTable[k][i + (1 << k)]);
    }
    // something else ...
    return 0;
}
